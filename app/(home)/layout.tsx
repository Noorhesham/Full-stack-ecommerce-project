import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "../globals.css";
import { getServerSession } from "next-auth";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import NavBar from "../components/NavBar";
import User from "@/lib/database/models/UserModel";
import { redirect } from "next/navigation";
import connect from "@/lib/database/connect";
import React from "react";
import { authOptions } from "../api/auth/[...nextauth]/route";
const inter = Inter({ subsets: ["latin"] });

//todos
/* 
Dashboard for Seller
Overview of sales and revenue
Orders management (view orders, update order status)
Sales analytics (charts and graphs)

Admin Dashboard

Manage pending products
Approve or reject new products
Orders management
View all orders
Update order status
User management
View and manage users

Role-based access control
Password reset functionality
Product Listing and Search

List products by category
Implement search functionality
Filter products by price, category, and brand
Sort products (by price, popularity, etc.)
Product Details Page

Display product information (name, description, price, images, etc.)
Show product reviews and ratings
Add to cart functionality
Cart and Checkout

Cart management (add, update, remove products)
Checkout process
Shipping information
Payment integration (Stripe, PayPal, etc.)
Order confirmation page
User Profile and Order History

User profile management
Update personal information
Change password
View order history
Track order status
View order details
Review and Rating System

Allow users to leave reviews and ratings for products
Display average rating on product details page
Manage reviews (admin can delete inappropriate reviews)
Notifications and Alerts

Notify users of order status updates
Notify sellers of new orders
Admin notifications for pending product approvals
Responsive Design

*/
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <main className="relative  flex flex-col min-h-screen">
      <NavBar />
      <div className="flex-grow flex-1"> {children}</div>
    </main>
  );
}
